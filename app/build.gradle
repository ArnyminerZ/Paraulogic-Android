plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
}

android {
    compileSdk 32

    Properties properties = new Properties()
    properties.load(project.rootProject.file("local.properties").newDataInputStream())

    defaultConfig {
        applicationId "com.arnyminerz.paraulogic"
        minSdk 21
        targetSdk 32
        versionCode findProperty("android.versionCode") as Integer
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        resValue "string", "SENTRY_DSS", properties.getProperty("SENTRY_DSS", "")
    }

    // Configures the APK and AAB signing config
    signingConfigs {
        release {
            def props = new Properties()
            file("${rootDir}/local.properties").withInputStream { props.load(it) }

            storeFile file("${rootDir}/keystore.jks")
            storePassword props.getProperty("SIGNING_KEY_PASSWORD")
            keyAlias props.getProperty("SIGNING_KEY_ALIAS")
            keyPassword props.getProperty("SIGNING_KEY_PASSWORD")
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

// This increases version code on release
android.applicationVariants.all { variant ->
    if (variant.buildType.name == "release") {
        variant.assemble.doLast {
            def versionPropsFile = file("../gradle.properties")
            Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            def code = versionProps['android.versionCode'].toInteger() + 1
            versionProps['android.versionCode'] = code.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
            logger.lifecycle("Increased version code to $code")
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'com.google.android.material:material:1.6.0-alpha03'
    implementation "androidx.activity:activity-ktx:$activity_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "androidx.appcompat:appcompat:1.4.1"

    // Jetpack Compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"

    // Jetpack Compose - Material
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.activity:activity-compose:$activity_version"

    // Jetpack Compose - Material 3
    implementation 'androidx.compose.material3:material3:1.0.0-alpha06'

    // Jetpack Compose - Async
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"

    // Jetpack Compose - Remember preferences
    implementation 'dev.burnoo:compose-remember-preference:0.3.4'

    // Lifecycle async components
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'

    // Room Data Storage
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    // Volley
    implementation 'com.android.volley:volley:1.2.1'

    // Timber Logger
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Sentry
    implementation 'io.sentry:sentry-android:5.6.2'

    // Play Services
    implementation 'com.google.android.gms:play-services-games:22.0.1'
    implementation 'com.google.android.gms:play-services-auth:20.1.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
}
